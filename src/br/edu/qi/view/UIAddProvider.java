/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.qi.view;

import br.edu.qi.model.Provider;
import br.edu.qi.services.ProviderServices;
import br.edu.qi.services.ServicesFactory;
import br.edu.qi.util.Validation;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author Luiz Dorval
 * @since 10/07/2019
 * @version 1.0.1 beta C56
 */
public class UIAddProvider extends javax.swing.JInternalFrame {

    /**
     * Creates new form UIAddProvider
     */
    public UIAddProvider() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlpData = new javax.swing.JLayeredPane();
        jlName = new javax.swing.JLabel();
        jlCpf = new javax.swing.JLabel();
        jlEmail = new javax.swing.JLabel();
        jlPhoneNumber = new javax.swing.JLabel();
        jlAge = new javax.swing.JLabel();
        jtName = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jtEmail = new javax.swing.JTextField();
        jtPhoneNumber = new javax.swing.JTextField();
        jtAge = new javax.swing.JTextField();
        jlErrorName = new javax.swing.JLabel();
        jlErrorCpf = new javax.swing.JLabel();
        jlErrorEmail = new javax.swing.JLabel();
        jlErrorPhoneNumber = new javax.swing.JLabel();
        jlErrorAge = new javax.swing.JLabel();
        jlpActions = new javax.swing.JLayeredPane();
        jbRegister = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jlpData.setBorder(new javax.swing.border.MatteBorder(null));

        jlName.setText("Nome");

        jlCpf.setText("CPF");

        jlEmail.setText("E-mail");

        jlPhoneNumber.setText("Telefone");

        jlAge.setText("Idade");

        jtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNameFocusLost(evt);
            }
        });
        jtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNameKeyPressed(evt);
            }
        });

        jtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCpfFocusLost(evt);
            }
        });
        jtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCpfKeyPressed(evt);
            }
        });

        jtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEmailFocusLost(evt);
            }
        });
        jtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEmailKeyPressed(evt);
            }
        });

        jtPhoneNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtPhoneNumberFocusLost(evt);
            }
        });
        jtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtPhoneNumberKeyPressed(evt);
            }
        });

        jtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtAgeFocusLost(evt);
            }
        });
        jtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtAgeKeyPressed(evt);
            }
        });

        jlpData.setLayer(jlName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlPhoneNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlAge, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jtName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jtCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jtEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jtPhoneNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jtAge, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlErrorName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlErrorCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlErrorEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlErrorPhoneNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpData.setLayer(jlErrorAge, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpDataLayout = new javax.swing.GroupLayout(jlpData);
        jlpData.setLayout(jlpDataLayout);
        jlpDataLayout.setHorizontalGroup(
            jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpDataLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlEmail)
                    .addComponent(jlPhoneNumber)
                    .addComponent(jlCpf)
                    .addComponent(jlAge)
                    .addComponent(jlName))
                .addGap(40, 40, 40)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtPhoneNumber)
                    .addComponent(jtCpf)
                    .addComponent(jtEmail)
                    .addComponent(jtName)
                    .addComponent(jtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jlErrorPhoneNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(jlErrorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlErrorAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlErrorCpf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlErrorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpDataLayout.setVerticalGroup(
            jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDataLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpDataLayout.createSequentialGroup()
                        .addComponent(jlErrorName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlErrorCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jlpDataLayout.createSequentialGroup()
                        .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlName)
                            .addComponent(jtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCpf))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlEmail))
                    .addComponent(jlErrorEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlPhoneNumber))
                    .addComponent(jlErrorPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jlpDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlAge))
                    .addComponent(jlErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jlpActions.setBorder(new javax.swing.border.MatteBorder(null));

        jbRegister.setText("Cadastrar");
        jbRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegisterActionPerformed(evt);
            }
        });

        jbClear.setText("Limpar");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jlpActions.setLayer(jbRegister, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbClear, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpActionsLayout = new javax.swing.GroupLayout(jlpActions);
        jlpActions.setLayout(jlpActionsLayout);
        jlpActionsLayout.setHorizontalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpActionsLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jbRegister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(jbClear)
                .addGap(139, 139, 139))
        );
        jlpActionsLayout.setVerticalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbRegister)
                    .addComponent(jbClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlpData)
                    .addComponent(jlpActions))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlpData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlpActions)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clear() {
        jtName.setText("");
        jtCpf.setText("");
        jtEmail.setText("");
        jtPhoneNumber.setText("");
        jtAge.setText("");
        jlErrorName.setText("");
        jlErrorCpf.setText("");
        jlErrorEmail.setText("");
        jlErrorPhoneNumber.setText("");
        jlErrorAge.setText("");
        jtName.setBorder(BorderFactory.createLineBorder(Color.lightGray));
        jtCpf.setBorder(BorderFactory.createLineBorder(Color.lightGray));
        jtEmail.setBorder(BorderFactory.createLineBorder(Color.lightGray));
        jtPhoneNumber.setBorder(BorderFactory.createLineBorder(Color.lightGray));
        jtAge.setBorder(BorderFactory.createLineBorder(Color.lightGray));
        jtName.grabFocus();
    }
    
    private void register() {
        try {
            if(jtName.getText().isEmpty()) {
                throw new Exception("Nome inválido");
            } else if(jtCpf.getText().isEmpty()) {
                throw new Exception("CPF inválido");
            } else if(jtEmail.getText().isEmpty()) {
                jtEmail.setBorder(BorderFactory.createLineBorder(Color.red));
                throw new Exception("Email inválido");
            } else if(jtPhoneNumber.getText().isEmpty()) {
                throw new Exception("Telefone inválido");
            } else if(jtAge.getText().isEmpty()) {
                throw new Exception("Idade inválida");
            }
            
            Provider provider = new Provider();
            provider.setName(jtName.getText());
            provider.setCpf(jtCpf.getText());
            provider.setEmail(jtEmail.getText());
            provider.setPhoneNumber(jtPhoneNumber.getText());
            provider.setAge(Integer.parseInt(jtAge.getText()));
            
            ProviderServices providerServices = ServicesFactory.getProviderServices();
            providerServices.addProvider(provider);
            
            JOptionPane.showMessageDialog(rootPane, "Fornecedor cadastrado com sucesso!");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(rootPane, "Erro! " + exception.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        clear();
    }//GEN-LAST:event_jbClearActionPerformed

    private void jbRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegisterActionPerformed
        register();
        clear();
        jtName.grabFocus();
    }//GEN-LAST:event_jbRegisterActionPerformed

    private void jtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNameFocusLost
        if(!Validation.validateName(jtName.getText())) {
            jtName.setBorder(BorderFactory.createLineBorder(Color.red));
            jlErrorName.setText("Nome inválido");
            jlErrorName.setVisible(true);
        } else {
            jtName.setBorder(BorderFactory.createLineBorder(Color.green));
            jlErrorName.setText("");
            jlErrorName.setVisible(false);
        }
    }//GEN-LAST:event_jtNameFocusLost

    private void jtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCpfFocusLost
        if(!Validation.validateCpf(jtCpf.getText())) {
            jtCpf.setBorder(BorderFactory.createLineBorder(Color.red));
            jlErrorCpf.setText("CPF inválido");
            jlErrorCpf.setVisible(true);
        } else {
            jtCpf.setBorder(BorderFactory.createLineBorder(Color.green));
            jlErrorCpf.setText("");
            jlErrorCpf.setVisible(false);
        }
    }//GEN-LAST:event_jtCpfFocusLost

    private void jtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEmailFocusLost
        if(jtEmail.getText().isEmpty()) {
            jtEmail.setBorder(BorderFactory.createLineBorder(Color.red));
            jlErrorEmail.setText("E-mail inválido");
            jlErrorEmail.setVisible(true);
        } else {
            jtEmail.setBorder(BorderFactory.createLineBorder(Color.green));
            jlErrorEmail.setText("");
            jlErrorEmail.setVisible(false);
        }
    }//GEN-LAST:event_jtEmailFocusLost

    private void jtPhoneNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPhoneNumberFocusLost
        if(!Validation.validatePhoneNumber(jtPhoneNumber.getText())) {
            jtPhoneNumber.setBorder(BorderFactory.createLineBorder(Color.red));
            jlErrorPhoneNumber.setText("Telefone inválido");
            jlErrorPhoneNumber.setVisible(true);
        } else {
            jtPhoneNumber.setBorder(BorderFactory.createLineBorder(Color.green));
            jlErrorPhoneNumber.setText("");
            jlErrorPhoneNumber.setVisible(false);
        }
    }//GEN-LAST:event_jtPhoneNumberFocusLost

    private void jtAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtAgeFocusLost
        if(!Validation.validateAge(jtAge.getText())) {
            jtAge.setBorder(BorderFactory.createLineBorder(Color.red));
            jlErrorAge.setText("Idade inválido");
            jlErrorAge.setVisible(true);
        } else {
            jtAge.setBorder(BorderFactory.createLineBorder(Color.green));
            jlErrorAge.setText("");
            jlErrorAge.setVisible(false);
        }
    }//GEN-LAST:event_jtAgeFocusLost

    private void jtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtCpf.grabFocus();
        } 
    }//GEN-LAST:event_jtNameKeyPressed

    private void jtCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCpfKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtEmail.grabFocus();
        } 
    }//GEN-LAST:event_jtCpfKeyPressed

    private void jtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEmailKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtPhoneNumber.grabFocus();
        } 
    }//GEN-LAST:event_jtEmailKeyPressed

    private void jtPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPhoneNumberKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtAge.grabFocus();
        } 
    }//GEN-LAST:event_jtPhoneNumberKeyPressed

    private void jtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtAgeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            register();
        }
    }//GEN-LAST:event_jtAgeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbRegister;
    private javax.swing.JLabel jlAge;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlErrorAge;
    private javax.swing.JLabel jlErrorCpf;
    private javax.swing.JLabel jlErrorEmail;
    private javax.swing.JLabel jlErrorName;
    private javax.swing.JLabel jlErrorPhoneNumber;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPhoneNumber;
    private javax.swing.JLayeredPane jlpActions;
    private javax.swing.JLayeredPane jlpData;
    private javax.swing.JTextField jtAge;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtName;
    private javax.swing.JTextField jtPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
