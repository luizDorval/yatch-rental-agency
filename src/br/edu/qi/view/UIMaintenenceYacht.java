/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.qi.view;

import br.edu.qi.services.ServicesFactory;
import br.edu.qi.services.YachtServices;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import br.edu.qi.model.Yacht;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luiz Dorval
 * @since 09/07/2019
 * @version 1.0.1 beta C56
 */
public class UIMaintenenceYacht extends javax.swing.JInternalFrame {

    DefaultTableModel defaultTableModel = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Código", "IMO", "Modelo", "Cor", "Tipo", "Material", "Largura", "Altura", "Peso", "Max.Pessoas", "Max.Peso"});
    
    /**
     * Creates new form UIMaintenenceYacht
     */
    public UIMaintenenceYacht() {
        initComponents();
        fill();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlpTable = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableYacht = new javax.swing.JTable();
        jlpActions = new javax.swing.JLayeredPane();
        jbFill = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbConfirmUpdate = new javax.swing.JButton();
        jlpUpdateData = new javax.swing.JLayeredPane();
        jtIdYacht = new javax.swing.JTextField();
        jtImo = new javax.swing.JTextField();
        jtModel = new javax.swing.JTextField();
        jtColor = new javax.swing.JTextField();
        jtType = new javax.swing.JTextField();
        jtMaterial = new javax.swing.JTextField();
        jtWidth = new javax.swing.JTextField();
        jtHeight = new javax.swing.JTextField();
        jtWeight = new javax.swing.JTextField();
        jlpSearch = new javax.swing.JLayeredPane();
        jtSearch = new javax.swing.JTextField();
        jcbFilter = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);

        jlpTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTableYacht.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "IMO", "Modelo", "Cor", "Tipo", "Material", "Largura", "Altura", "Peso", "Max.Pessoas", "Max.Peso"
            }
        ));
        jTableYacht.setFocusable(false);
        jTableYacht.getTableHeader().setReorderingAllowed(false);
        jTableYacht.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableYachtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableYacht);

        jlpTable.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpTableLayout = new javax.swing.GroupLayout(jlpTable);
        jlpTable.setLayout(jlpTableLayout);
        jlpTableLayout.setHorizontalGroup(
            jlpTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jlpTableLayout.setVerticalGroup(
            jlpTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlpActions.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbFill.setText("Preencher");
        jbFill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFillActionPerformed(evt);
            }
        });

        jbClear.setText("Limpar");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jbDelete.setText("Deletar");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jbConfirmUpdate.setText("Confirmar alteração");
        jbConfirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmUpdateActionPerformed(evt);
            }
        });

        jlpActions.setLayer(jbFill, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbClear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbConfirmUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpActionsLayout = new javax.swing.GroupLayout(jlpActions);
        jlpActions.setLayout(jlpActionsLayout);
        jlpActionsLayout.setHorizontalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpActionsLayout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(jbFill, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbConfirmUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbClear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(398, Short.MAX_VALUE))
        );
        jlpActionsLayout.setVerticalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConfirmUpdate)
                    .addComponent(jbDelete)
                    .addComponent(jbFill)
                    .addComponent(jbClear))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jlpUpdateData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtIdYacht.setEditable(false);
        jtIdYacht.setText("Código");

        jtImo.setText("IMO");

        jtModel.setText("Modelo");

        jtColor.setText("Cor");

        jtType.setText("Tipo");

        jtMaterial.setText("Material");

        jtWidth.setText("Largura");

        jtHeight.setText("Altura");

        jtWeight.setText("Peso");

        jlpUpdateData.setLayer(jtIdYacht, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtImo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtModel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtColor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtMaterial, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtWidth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtHeight, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtWeight, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpUpdateDataLayout = new javax.swing.GroupLayout(jlpUpdateData);
        jlpUpdateData.setLayout(jlpUpdateDataLayout);
        jlpUpdateDataLayout.setHorizontalGroup(
            jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtImo)
                            .addComponent(jtMaterial, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtColor)
                            .addComponent(jtHeight, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(jtType)))
                    .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                        .addGap(542, 542, 542)
                        .addComponent(jtIdYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpUpdateDataLayout.setVerticalGroup(
            jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                .addComponent(jtIdYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtImo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jlpSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtSearchKeyReleased(evt);
            }
        });

        jcbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Imo", "Modelo", "Cor", "Tipo", "Material", "Largura", "Altura", "Peso" }));
        jcbFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFilterItemStateChanged(evt);
            }
        });

        jlpSearch.setLayer(jtSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpSearch.setLayer(jcbFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpSearchLayout = new javax.swing.GroupLayout(jlpSearch);
        jlpSearch.setLayout(jlpSearchLayout);
        jlpSearchLayout.setHorizontalGroup(
            jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpSearchLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jcbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpSearchLayout.setVerticalGroup(
            jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpSearchLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlpSearch)
                    .addComponent(jlpTable)
                    .addComponent(jlpUpdateData)
                    .addComponent(jlpActions))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpUpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void fill() {
        try {
            YachtServices yachtServices = ServicesFactory.getYachtServices();
            ArrayList<Yacht> yachts = yachtServices.searchYachts();
            for(int i=0; i<yachts.size();i++){
                defaultTableModel.addRow(new String[] {
                    String.valueOf(yachts.get(i).getIdYacht()),
                    String.valueOf(yachts.get(i).getImo()),
                    yachts.get(i).getModel(),
                    yachts.get(i).getColor(),
                    yachts.get(i).getType(),
                    yachts.get(i).getMaterial(),
                    String.valueOf(yachts.get(i).getWidth()),
                    String.valueOf(yachts.get(i).getHeight()),
                    String.valueOf(yachts.get(i).getWeight()),
                    String.valueOf(yachts.get(i).calculatePeopleCapacity()),
                    String.valueOf(yachts.get(i).calculateWeightCapacity())
                });
            }
            jTableYacht.setModel(defaultTableModel);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(this, 
                    "ERRO! " + sQLException.getMessage());
        }
    }

    private void clear() {
        defaultTableModel.setNumRows(0);
    }
    
    private void delete() {
        try {
            int row = jTableYacht.getSelectedRow();
            if(row == -1) {
                JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir");
            }
            YachtServices yachtServices = ServicesFactory.getYachtServices();
            String idYacht = jTableYacht.getValueAt(row, 0).toString();
            yachtServices.deleteYacht(Long.parseLong(idYacht));
            
            JOptionPane.showMessageDialog(this, "Iate excluida com sucesso");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Erro! " + exception.getMessage());
        }
    }
    
    private void update() {
        int row = jTableYacht.getSelectedRow();
        String idYacht = jTableYacht.getValueAt(row, 0).toString();
        String imo = jTableYacht.getValueAt(row, 1).toString();
        String model = jTableYacht.getValueAt(row, 2).toString();
        String color = jTableYacht.getValueAt(row, 3).toString();
        String type = jTableYacht.getValueAt(row, 4).toString();
        String material = jTableYacht.getValueAt(row, 5).toString();
        String width = jTableYacht.getValueAt(row, 6).toString();
        String height = jTableYacht.getValueAt(row, 7).toString();
        String weight = jTableYacht.getValueAt(row, 8).toString();
        
        jtIdYacht.setText(idYacht);
        jtImo.setText(imo);
        jtModel.setText(model);
        jtColor.setText(color);
        jtType.setText(type);
        jtMaterial.setText(material);
        jtWidth.setText(width);
        jtHeight.setText(height);
        jtWeight.setText(weight);
    }
    
    private void confirmUpdate() {
        try {
            Yacht yacht = new Yacht();
            yacht.setIdYacht(Long.parseLong(jtIdYacht.getText()));
            yacht.setImo(Integer.parseInt(jtImo.getText()));
            yacht.setModel(jtModel.getText());
            yacht.setColor(jtColor.getText());
            yacht.setType(jtType.getText());
            yacht.setMaterial(jtMaterial.getText());
            yacht.setWidth(Double.parseDouble(jtWidth.getText()));
            yacht.setHeight(Double.parseDouble(jtHeight.getText()));
            yacht.setWeight(Double.parseDouble(jtWeight.getText()));
            
            YachtServices yachtServices = br.edu.qi.services.ServicesFactory.getYachtServices();
            yachtServices.updateYacht(yacht);
            JOptionPane.showMessageDialog(this, "Iate alterado com sucesso");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Erro! " + exception.getMessage());
        }
    }
    
    private void filter() {
        try {
            if(jtSearch.getText().isEmpty()) {
                clear();
                fill();
                return;
            }
            
            YachtServices yachtServices = ServicesFactory.getYachtServices();
            String search = jtSearch.getText();
            String filter = jcbFilter.getSelectedItem().toString();
            ArrayList<Yacht> yachts = yachtServices.filterYacht(search, filter);
            
            for(int i = 0; i < yachts.size(); i++) {
                defaultTableModel.addRow(new String[]{
                    String.valueOf(yachts.get(i).getIdYacht()),
                    String.valueOf(yachts.get(i).getImo()),
                    yachts.get(i).getModel(),
                    yachts.get(i).getColor(),
                    yachts.get(i).getType(),
                    yachts.get(i).getMaterial(),
                    String.valueOf(yachts.get(i).getWidth()),
                    String.valueOf(yachts.get(i).getHeight()),
                    String.valueOf(yachts.get(i).getWeight())
                });
            }
            jTableYacht.setModel(defaultTableModel);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(this, "Erro! " + sQLException.getMessage());
        }
    }
    private void jbFillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFillActionPerformed
        clear();
        fill();
    }//GEN-LAST:event_jbFillActionPerformed

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        clear();
    }//GEN-LAST:event_jbClearActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        delete();
        clear();
        fill();
    }//GEN-LAST:event_jbDeleteActionPerformed

    private void jTableYachtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableYachtMouseClicked
        update();
    }//GEN-LAST:event_jTableYachtMouseClicked

    private void jbConfirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmUpdateActionPerformed
        confirmUpdate();
        clear();
        fill();
    }//GEN-LAST:event_jbConfirmUpdateActionPerformed

    private void jtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtSearchKeyReleased
        clear();
        filter();
    }//GEN-LAST:event_jtSearchKeyReleased

    private void jcbFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFilterItemStateChanged
        clear();
        filter();
    }//GEN-LAST:event_jcbFilterItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableYacht;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbConfirmUpdate;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbFill;
    private javax.swing.JComboBox<String> jcbFilter;
    private javax.swing.JLayeredPane jlpActions;
    private javax.swing.JLayeredPane jlpSearch;
    private javax.swing.JLayeredPane jlpTable;
    private javax.swing.JLayeredPane jlpUpdateData;
    private javax.swing.JTextField jtColor;
    private javax.swing.JTextField jtHeight;
    private javax.swing.JTextField jtIdYacht;
    private javax.swing.JTextField jtImo;
    private javax.swing.JTextField jtMaterial;
    private javax.swing.JTextField jtModel;
    private javax.swing.JTextField jtSearch;
    private javax.swing.JTextField jtType;
    private javax.swing.JTextField jtWeight;
    private javax.swing.JTextField jtWidth;
    // End of variables declaration//GEN-END:variables
}
