/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.qi.view;

import br.edu.qi.services.ProviderServices;
import br.edu.qi.services.ServicesFactory;
import java.sql.SQLException;
import java.util.ArrayList;
import br.edu.qi.model.Provider;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luiz Dorval
 * @since 10/07/2019
 * @version 1.0.1 beta C56
 */
public class UIMaintenenceProvider extends javax.swing.JInternalFrame {

    DefaultTableModel defaultTableModel = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Código","Nome","CPF","E-mail","Número de telefone","IDade"});
    
    /**
     * Creates new form UIMaintenenceProvider
     */
    public UIMaintenenceProvider() {
        initComponents();
        fill();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlpSearch = new javax.swing.JLayeredPane();
        jtSearch = new javax.swing.JTextField();
        jcbFilter = new javax.swing.JComboBox<>();
        jlpTable = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProvider = new javax.swing.JTable();
        jlpUpdateData = new javax.swing.JLayeredPane();
        jtIdProvider = new javax.swing.JTextField();
        jtName = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jtEmail = new javax.swing.JTextField();
        jtPhoneNumber = new javax.swing.JTextField();
        jtAge = new javax.swing.JTextField();
        jlpActions = new javax.swing.JLayeredPane();
        jbFill = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbConfirmUpdate = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jlpSearch.setBorder(new javax.swing.border.MatteBorder(null));

        jtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtSearchKeyReleased(evt);
            }
        });

        jcbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome", "CPF", "E-mail", "Número de telefone", "Idade" }));
        jcbFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFilterItemStateChanged(evt);
            }
        });

        jlpSearch.setLayer(jtSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpSearch.setLayer(jcbFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpSearchLayout = new javax.swing.GroupLayout(jlpSearch);
        jlpSearch.setLayout(jlpSearchLayout);
        jlpSearchLayout.setHorizontalGroup(
            jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpSearchLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jcbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpSearchLayout.setVerticalGroup(
            jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpSearchLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jlpSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jlpTable.setBorder(new javax.swing.border.MatteBorder(null));

        jTableProvider.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "CPF", "E-mail", "Número de telefone", "Idade"
            }
        ));
        jTableProvider.getTableHeader().setReorderingAllowed(false);
        jTableProvider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProviderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProvider);

        jlpTable.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpTableLayout = new javax.swing.GroupLayout(jlpTable);
        jlpTable.setLayout(jlpTableLayout);
        jlpTableLayout.setHorizontalGroup(
            jlpTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jlpTableLayout.setVerticalGroup(
            jlpTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTableLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jlpUpdateData.setBorder(new javax.swing.border.MatteBorder(null));

        jlpUpdateData.setLayer(jtIdProvider, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtPhoneNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpUpdateData.setLayer(jtAge, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpUpdateDataLayout = new javax.swing.GroupLayout(jlpUpdateData);
        jlpUpdateData.setLayout(jlpUpdateDataLayout);
        jlpUpdateDataLayout.setHorizontalGroup(
            jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                        .addComponent(jtIdProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jtName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                        .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlpUpdateDataLayout.setVerticalGroup(
            jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpUpdateDataLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtIdProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlpUpdateDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jlpActions.setBorder(new javax.swing.border.MatteBorder(null));

        jbFill.setText("Preencher");
        jbFill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFillActionPerformed(evt);
            }
        });

        jbDelete.setText("Deletar");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jbConfirmUpdate.setText("Confirmar alteração");
        jbConfirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmUpdateActionPerformed(evt);
            }
        });

        jbClear.setText("Limpar");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jlpActions.setLayer(jbFill, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbConfirmUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpActions.setLayer(jbClear, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpActionsLayout = new javax.swing.GroupLayout(jlpActions);
        jlpActions.setLayout(jlpActionsLayout);
        jlpActionsLayout.setHorizontalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpActionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbFill, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbConfirmUpdate)
                .addGap(18, 18, 18)
                .addComponent(jbClear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jlpActionsLayout.setVerticalGroup(
            jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlpActionsLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jlpActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbFill)
                    .addComponent(jbDelete)
                    .addComponent(jbConfirmUpdate)
                    .addComponent(jbClear))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlpActions)
                    .addComponent(jlpUpdateData)
                    .addComponent(jlpTable)
                    .addComponent(jlpSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jlpSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlpUpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void fill() {
        try {
            ProviderServices providerServices = ServicesFactory.getProviderServices();
            ArrayList<Provider> providers = providerServices.searchProvider();
            for(int i=0; i < providers.size(); i++) {
                defaultTableModel.addRow(new String[] {
                    String.valueOf(providers.get(i).getIdprovider()),
                    providers.get(i).getName(),
                    providers.get(i).getCpf(),
                    providers.get(i).getEmail(),
                    providers.get(i).getPhoneNumber(),
                    String.valueOf(providers.get(i).getAge())
                });
            }
            jTableProvider.setModel(defaultTableModel);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(this, "Erro! " + sQLException.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void clear() {
        defaultTableModel.setNumRows(0);
    }
    
    private void delete() {
        try {
            int row = jTableProvider.getSelectedRow();
            if(row == -1) {
                JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir");
            }
            ProviderServices providerServices = ServicesFactory.getProviderServices();
            String idProvider = jTableProvider.getValueAt(row, 0).toString();
            providerServices.deleteProvider(Long.parseLong(idProvider));
            
            JOptionPane.showMessageDialog(this, "Linha excluida com sucesso");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Erro! " + exception.getMessage());
        }
    }
    
    private void update() {
        int row = jTableProvider.getSelectedRow();
        String idProvider = jTableProvider.getValueAt(row, 0).toString();
        String name = jTableProvider.getValueAt(row, 1).toString();
        String cpf = jTableProvider.getValueAt(row, 2).toString();
        String email = jTableProvider.getValueAt(row, 3).toString();
        String phoneNumber = jTableProvider.getValueAt(row, 4).toString();
        String age = jTableProvider.getValueAt(row, 5).toString();
        
        jtIdProvider.setText(idProvider);
        jtName.setText(name);
        jtCpf.setText(cpf);
        jtEmail.setText(email);
        jtPhoneNumber.setText(phoneNumber);
        jtAge.setText(age);
    }
    
    private void confirmUpdate() {
        try {
            Provider provider = new Provider();
            provider.setIdprovider(Long.parseLong(jtIdProvider.getText()));
            provider.setName(jtName.getText());
            provider.setCpf(jtCpf.getText());
            provider.setEmail(jtEmail.getText());
            provider.setPhoneNumber(jtPhoneNumber.getText());
            provider.setAge(Integer.parseInt(jtAge.getText()));
            
            ProviderServices providerServices = br.edu.qi.services.ServicesFactory.getProviderServices();
            providerServices.updateProvider(provider);
            JOptionPane.showMessageDialog(this, "Fornecedor alterado com sucesso");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(this, "Erro! " + exception.getMessage());
        }
    }
    
    private void filter() {
        try {
            if(jtSearch.getText().isEmpty()) {
                clear();
                fill();
                return;
            }
            
            ProviderServices providerServices = ServicesFactory.getProviderServices();
            String search = jtSearch.getText();
            String filter = jcbFilter.getSelectedItem().toString();
            ArrayList<Provider> providers = providerServices.filterProvider(search, filter);
            
            for(int i = 0; i < providers.size(); i++) {
                defaultTableModel.addRow(new String[]{
                    String.valueOf(providers.get(i).getIdprovider()),
                    String.valueOf(providers.get(i).getName()),
                    providers.get(i).getCpf(),
                    providers.get(i).getEmail(),
                    providers.get(i).getPhoneNumber(),
                    String.valueOf(providers.get(i).getAge()),
                });
            }
            jTableProvider.setModel(defaultTableModel);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(this, "Erro! " + sQLException.getMessage());
        }
    }
    private void jbFillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFillActionPerformed
        clear();
        fill();
    }//GEN-LAST:event_jbFillActionPerformed

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        clear();
    }//GEN-LAST:event_jbClearActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        delete();
        clear();
        fill();
    }//GEN-LAST:event_jbDeleteActionPerformed

    private void jbConfirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmUpdateActionPerformed
        confirmUpdate();
        clear();
        fill();
    }//GEN-LAST:event_jbConfirmUpdateActionPerformed

    private void jtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtSearchKeyReleased
        clear();
        filter();
    }//GEN-LAST:event_jtSearchKeyReleased

    private void jcbFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFilterItemStateChanged
        clear();
        filter();
    }//GEN-LAST:event_jcbFilterItemStateChanged

    private void jTableProviderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProviderMouseClicked
        update();
    }//GEN-LAST:event_jTableProviderMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProvider;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbConfirmUpdate;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbFill;
    private javax.swing.JComboBox<String> jcbFilter;
    private javax.swing.JLayeredPane jlpActions;
    private javax.swing.JLayeredPane jlpSearch;
    private javax.swing.JLayeredPane jlpTable;
    private javax.swing.JLayeredPane jlpUpdateData;
    private javax.swing.JTextField jtAge;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtIdProvider;
    private javax.swing.JTextField jtName;
    private javax.swing.JTextField jtPhoneNumber;
    private javax.swing.JTextField jtSearch;
    // End of variables declaration//GEN-END:variables
}
